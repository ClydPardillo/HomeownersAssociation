@model HomeownersAssociation.Models.Contact

@{
    ViewData["Title"] = "Contact Details";
    var isAdminOrStaff = User.IsInRole("Admin") || User.IsInRole("Staff");
}

<div class="container-fluid pt-4 px-4">
    <div class="row justify-content-center">
        <div class="col-md-10 col-lg-8">
            <div class="bg-light rounded p-4 shadow-sm">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h4 class="mb-0">@ViewData["Title"]: <span class="fw-normal">@Model.Name</span></h4>
                    <div>
                        @if (isAdminOrStaff)
                        {
                            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-sm btn-primary me-2"><i class="fas fa-edit me-1"></i>Edit</a>
                        }
                        <a asp-action="@(isAdminOrStaff ? "Manage" : "Index")" class="btn btn-sm btn-secondary"><i class="fas fa-arrow-left me-1"></i>Back to List</a>
                    </div>
                </div>
                <hr />

                <dl class="row">
                    <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Name)</dt>
                    <dd class="col-sm-9">@Html.DisplayFor(model => model.Name)</dd>

                    <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Category)</dt>
                    <dd class="col-sm-9">@Html.DisplayFor(model => model.Category)</dd>

                    @if (!string.IsNullOrEmpty(Model.PhoneNumber))
                    {
                        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.PhoneNumber)</dt>
                        <dd class="col-sm-9">@Html.DisplayFor(model => model.PhoneNumber)</dd>
                    }

                    @if (!string.IsNullOrEmpty(Model.EmailAddress))
                    {
                        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.EmailAddress)</dt>
                        <dd class="col-sm-9"><a href="mailto:@Model.EmailAddress">@Model.EmailAddress</a></dd>
                    }

                    @if (!string.IsNullOrEmpty(Model.OfficeHours))
                    {
                        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.OfficeHours)</dt>
                        <dd class="col-sm-9">@Html.DisplayFor(model => model.OfficeHours)</dd>
                    }

                    @if (!string.IsNullOrEmpty(Model.Location))
                    {
                        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Location)</dt>
                        <dd class="col-sm-9">@Html.DisplayFor(model => model.Location)</dd>
                    }

                    @if (!string.IsNullOrEmpty(Model.Notes))
                    {
                        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Notes)</dt>
                        <dd class="col-sm-9">@Html.DisplayFor(model => model.Notes)</dd>
                    }
                    
                    @if (isAdminOrStaff) // Only show these fields to Admin/Staff
                    {
                        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.IsPublic)</dt>
                        <dd class="col-sm-9">
                            @if (Model.IsPublic)
                            {
                                <span class="badge bg-success">Yes</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary">No</span>
                            }
                        </dd>

                        <dt class="col-sm-3">@Html.DisplayNameFor(model => model.DisplayOrder)</dt>
                        <dd class="col-sm-9">@Html.DisplayFor(model => model.DisplayOrder)</dd>
                    }
                </dl>
            </div>
        </div>
    </div>
</div> 