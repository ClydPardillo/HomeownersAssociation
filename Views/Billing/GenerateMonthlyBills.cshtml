@{
    ViewData["Title"] = "Generate Monthly Bills";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Hero Section -->
<div class="container-fluid p-0 mb-5">
    <div class="hero-section text-white text-center d-flex align-items-center justify-content-center"
         style="background-image: linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url('/images/billing-generatemonthly-hero.jpg'); background-size: cover; background-position: center; min-height: 30vh;">
        <div style="background-color: rgba(0, 0, 0, 0.5); padding: 2rem; border-radius: .5rem;">
            <h1 class="display-4 fw-bold oswald-heading"><i class="fas fa-cogs me-2"></i>@ViewData["Title"]</h1>
            <p class="lead lora-body mb-0">Create monthly dues bills for all homeowners.</p>
        </div>
    </div>
</div>

<div class="container py-5 lora-body">
    <div class="d-flex justify-content-end mb-4">
        <a asp-action="Index" class="btn btn-outline-secondary" data-mdb-ripple-init>
            <i class="fas fa-arrow-left me-2"></i> Back to Bills
        </a>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show shadow-1-strong" role="alert" data-mdb-alert-init data-mdb-autohide="true" data-mdb-delay="5000">
            <i class="fas fa-check-circle me-2"></i> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-mdb-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show shadow-1-strong" role="alert" data-mdb-alert-init>
            <i class="fas fa-times-circle me-2"></i> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-mdb-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row">
        <div class="col-md-8 mx-auto">
            <div class="card rounded-6 shadow-2-strong">
                <div class="card-header bg-primary text-white oswald-heading">
                    <h5 class="mb-0"><i class="fas fa-file-invoice-dollar me-2"></i>Monthly Dues Information</h5>
                </div>
                <div class="card-body">
                    <div class="alert alert-info d-flex align-items-center shadow-1-strong rounded-3 mb-4" role="alert">
                        <i class="fas fa-info-circle fa-2x me-3"></i>
                        <div>
                            <p class="mb-1 fw-bold">You are about to generate monthly dues bills for all homeowners.</p>
                            <p class="mb-1 small">This operation will create a new bill for each homeowner who doesn't
                                already have a monthly bill for the current month.</p>
                            <p class="mb-0 small">Current homeowner count: <strong class="text-primary">@ViewBag.HomeownerCount</strong></p>
                        </div>
                    </div>

                    <form asp-action="GenerateMonthlyBills" method="post">
                        <div class="row mb-4">
                            <div class="col-md-6">
                                <div class="input-group form-outline" data-mdb-input-init>
                                    <span class="input-group-text border">₱</span>
                                    <input type="number" id="amount" name="amount" class="form-control border"
                                           value="500.00" step="0.01" min="0.01" required />
                                    <label for="amount" class="form-label">Amount per Homeowner</label>
                                </div>
                                <div class="form-text mt-1">Standard dues amount charged to each homeowner.</div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-outline" data-mdb-input-init>
                                    <input type="date" id="dueDate" name="dueDate" class="form-control border" required
                                           value="@DateTime.Now.AddDays(30).ToString("yyyy-MM-dd")" />
                                    <label for="dueDate" class="form-label">Due Date</label>
                                </div>
                                <div class="form-text mt-1">Date by which homeowners must pay their dues.</div>
                            </div>
                        </div>

                        <div class="row mb-4">
                            <div class="col-md-12">
                                <div class="form-outline" data-mdb-input-init>
                                    <input type="text" id="description" name="description" class="form-control border"
                                           placeholder="Monthly Dues - @DateTime.Now.ToString("MMMM yyyy")" />
                                    <label for="description" class="form-label">Description (Optional)</label>
                                </div>
                                <div class="form-text mt-1">Leave blank to use the default description format.</div>
                            </div>
                        </div>

                        <div class="alert alert-warning d-flex align-items-center shadow-1-strong rounded-3 mb-4" role="alert">
                            <i class="fas fa-exclamation-triangle fa-lg me-3"></i>
                            <div>
                                <strong>Note:</strong> This action will not create duplicate bills for homeowners who
                                already have a monthly bill for the current month.
                            </div>
                        </div>

                        <div class="card rounded-6 shadow-1-strong bg-light mb-4">
                            <div class="card-body">
                                <h5 class="card-title oswald-heading"><i class="fas fa-search-dollar me-2"></i>Preview</h5>
                                <div class="row">
                                    <div class="col-md-6">
                                        <p class="small mb-1"><strong>Bill Type:</strong> Monthly Dues</p>
                                        <p class="small mb-1"><strong>Issue Date:</strong> @DateTime.Now.ToShortDateString()</p>
                                    </div>
                                    <div class="col-md-6">
                                        <p class="small mb-1"><strong>Status:</strong> Unpaid</p>
                                        <p class="small mb-1"><strong>Potential Total:</strong> <strong class="text-success fs-6">₱<span id="totalAmount">0.00</span></strong>
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="text-end">
                            <button type="submit" class="btn btn-primary btn-lg" data-mdb-ripple-init>
                                <i class="fas fa-bolt me-2"></i> Generate Bills
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Initialize MDB inputs if not using data-mdb-input-init or if specific initialization is needed
            // document.querySelectorAll('.form-outline').forEach((formOutline) => {
            // new mdb.Input(formOutline).init();
            // });
            // Note: data-mdb-input-init should handle auto-initialization.

            const amountInput = document.getElementById("amount");
            const totalAmountSpan = document.getElementById("totalAmount");
            const homeownerCount = parseInt(@ViewBag.HomeownerCount, 10);

            function updateTotal() {
                const amount = parseFloat(amountInput.value) || 0;
                const total = (amount * homeownerCount).toFixed(2);
                totalAmountSpan.textContent = total;
            }

            if (amountInput) {
                amountInput.addEventListener("input", updateTotal);
            }

            // Initialize
            updateTotal();
        });
    </script>
}