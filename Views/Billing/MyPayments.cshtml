@model IEnumerable<HomeownersAssociation.Models.Payment>
@using HomeownersAssociation.Models // Required for PaymentMethod enum

@{
    ViewData["Title"] = "My Payment History";
    Layout = "~/Views/Shared/_Layout.cshtml";

    // Helper to get PaymentMethod display string or default
    string GetPaymentMethodDisplay(PaymentMethod? method)
    {
        return method?.ToString() ?? "N/A";
    }
}

<!-- Hero Section -->
<div class="container-fluid p-0 mb-5">
    <div class="hero-section text-white text-center d-flex align-items-center justify-content-center"
         style="background-image: linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url('/images/billing-mypayments-hero.jpg'); background-size: cover; background-position: center; min-height: 30vh;">
        <div style="background-color: rgba(0, 0, 0, 0.5); padding: 2rem; border-radius: .5rem;">
            <h1 class="display-4 fw-bold oswald-heading"><i class="fas fa-history me-2"></i>@ViewData["Title"]</h1>
            <p class="lead lora-body mb-0">Review your past payments and print receipts.</p>
        </div>
    </div>
</div>

<div class="container py-5 lora-body">
    <!-- Action Buttons Bar -->
    <div class="d-flex flex-wrap justify-content-center justify-content-md-end gap-2 mb-4">
        <a asp-action="MyBills" class="btn btn-outline-secondary" data-mdb-ripple-init>
            <i class="fas fa-file-invoice me-2"></i> Back to My Bills
        </a>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show shadow-1-strong" role="alert" data-mdb-alert-init data-mdb-autohide="true" data-mdb-delay="5000">
            <i class="fas fa-check-circle me-2"></i> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-mdb-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show shadow-1-strong" role="alert" data-mdb-alert-init>
            <i class="fas fa-times-circle me-2"></i> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-mdb-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (!Model.Any())
    {
        <div class="alert alert-info shadow-1-strong text-center" role="alert">
            <i class="fas fa-info-circle fa-2x mb-2 d-block"></i> You have no payment records yet.
        </div>
    }
    else
    {
        <!-- Summary Card -->
        <div class="card rounded-6 shadow-2-strong mb-4">
            <div class="card-header bg-dark text-white oswald-heading">
                 <h5 class="mb-0"><i class="fas fa-calculator me-2"></i>Payment Summary</h5>
            </div>
            <div class="card-body">
                <div class="row text-center">
                    <div class="col-md-4 border-end-md">
                        <h6 class="text-muted oswald-heading">Total Payments Made</h6>
                        <p class="fs-4 fw-bold text-primary mb-0">@Model.Count()</p>
                    </div>
                    <div class="col-md-4 border-end-md mt-3 mt-md-0">
                        <h6 class="text-muted oswald-heading">Total Amount Paid</h6>
                        <p class="fs-4 fw-bold text-success mb-0">@Model.Sum(p => p.AmountPaid).ToString("C")</p>
                    </div>
                    <div class="col-md-4 mt-3 mt-md-0">
                        <h6 class="text-muted oswald-heading">Last Payment Date</h6>
                        <p class="fs-4 fw-bold text-info mb-0">@Model.OrderByDescending(p => p.PaymentDate).FirstOrDefault()?.PaymentDate.ToString("MMM dd, yyyy")</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Filter Controls -->
        <div class="card rounded-6 shadow-1-strong mb-4">
            <div class="card-header bg-light py-3">
                <h5 class="mb-0 oswald-heading"><i class="fas fa-filter me-2"></i>Filter Payments</h5>
            </div>
            <div class="card-body">
                <div class="row g-3 align-items-end">
                    <div class="col-md-4">
                        <label for="yearFilter" class="form-label">Year</label>
                        <select id="yearFilter" class="form-select border" data-mdb-select-init>
                            <option value="" selected>All Years</option>
                            @foreach (var year in Model.Select(p => p.PaymentDate.Year).Distinct().OrderByDescending(y => y))
                            {
                                <option value="@year">@year</option>
                            }
                        </select>
                    </div>
                    <div class="col-md-4">
                        <label for="methodFilter" class="form-label">Payment Method</label>
                        <select id="methodFilter" class="form-select border" data-mdb-select-init>
                            <option value="" selected>All Methods</option>
                            @foreach (var method in Enum.GetValues(typeof(PaymentMethod)).Cast<PaymentMethod>())
                            {
                                <option value="@method.ToString().ToLower()">@method</option>
                            }
                        </select>
                    </div>
                    <div class="col-md-4">
                        <div class="form-outline" data-mdb-input-init>
                            <input type="text" id="searchFilter" class="form-control border" />
                            <label for="searchFilter" class="form-label">Search Payment #, Bill #...</label>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Payments List -->
        <div class="row" id="paymentsContainer">
            @foreach (var payment in Model.OrderByDescending(p => p.PaymentDate))
            {
                <div class="col-md-6 mb-4 payment-card"
                     data-year="@payment.PaymentDate.Year"
                     data-method="@GetPaymentMethodDisplay(payment.PaymentMethod).ToLower()"
                     data-search="@(payment.PaymentNumber?.ToLower()) @(payment.Bill?.BillNumber?.ToLower()) @(payment.ReferenceNumber?.ToLower())">
                    <div class="card h-100 rounded-6 shadow-2-strong hover-shadow">
                        <div class="card-header bg-light d-flex justify-content-between align-items-center py-2">
                            <h6 class="mb-0 oswald-heading text-success"><i class="fas fa-receipt me-2"></i>Receipt #@payment.PaymentNumber</h6>
                            <span class="badge badge-primary rounded-pill fs-6">@payment.AmountPaid.ToString("C")</span>
                        </div>
                        <div class="card-body p-3">
                            <p class="small mb-1"><i class="fas fa-calendar-check me-2 text-muted"></i><strong>Payment Date:</strong> @payment.PaymentDate.ToString("MMMM dd, yyyy, hh:mm tt")</p>
                            <p class="small mb-2"><i class="fas fa-credit-card me-2 text-muted"></i><strong>Method:</strong> @GetPaymentMethodDisplay(payment.PaymentMethod)</p>
                            
                            <p class="small text-muted mb-1"><i class="fas fa-file-invoice me-2"></i>Bill Information:</p>
                            <p class="small ps-3">
                                @if (payment.Bill != null)
                                {
                                    <a asp-controller="Billing" asp-action="Details" asp-route-id="@payment.BillId" class="fw-bold" data-mdb-ripple-init>
                                        @payment.Bill.BillNumber - @payment.Bill.Description
                                    </a>
                                }
                                else
                                {
                                    <span class="text-muted fst-italic">N/A (Bill details not found)</span>
                                }
                            </p>

                            @if (!string.IsNullOrEmpty(payment.ReferenceNumber))
                            {
                                <p class="small mb-1"><i class="fas fa-list-ol me-2 text-muted"></i>Reference Number:</p>
                                <p class="small ps-3 fw-bold">@payment.ReferenceNumber</p>
                            }
                            @if (!string.IsNullOrEmpty(payment.Notes))
                            {
                                <p class="small text-muted mb-1"><i class="far fa-sticky-note me-2"></i>Notes:</p>
                                <p class="small ps-3 fst-italic">@Html.Raw(payment.Notes.Replace("\n", "<br />"))</p>
                            }
                        </div>
                        <div class="card-footer bg-light p-2 d-flex justify-content-between align-items-center">
                            <small class="text-muted" style="font-size: 0.75rem;">
                                @if (payment.ProcessedBy != null)
                                {
                                    <i class="fas fa-user-shield me-1"></i> @Html.Raw("Processed by: " + payment.ProcessedBy.FullName)
                                }
                                else if (payment.User != null && User.Identity != null && User.Identity.Name == payment.User.UserName)
                                {
                                     <i class="fas fa-user-check me-1"></i> @Html.Raw("Recorded by you")
                                }
                                else if (payment.User != null)
                                {
                                     <i class="fas fa-user me-1"></i> @Html.Raw("Recorded by: " + payment.User.FullName)
                                }
                                else
                                {
                                    <i class="fas fa-question-circle me-1"></i> @Html.Raw("Recorder unknown")
                                }
                            </small>
                            <button class="btn btn-sm btn-outline-primary" data-mdb-ripple-init
                                    onclick="showReceiptModal('@payment.PaymentNumber', '@payment.PaymentDate.ToString("MMMM dd, yyyy")', '@payment.AmountPaid.ToString("C")', '@(payment.Bill?.BillNumber ?? "N/A")', '@GetPaymentMethodDisplay(payment.PaymentMethod)', '@(payment.ReferenceNumber ?? "N/A")')">
                                <i class="fas fa-print me-1"></i> Print Receipt
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<!-- Print Receipt Modal -->
<div class="modal fade" id="receiptModal" tabindex="-1" aria-labelledby="receiptModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content rounded-6">
            <div class="modal-header bg-primary text-white oswald-heading">
                <h5 class="modal-title" id="receiptModalLabel"><i class="fas fa-receipt me-2"></i>Payment Receipt</h5>
                <button type="button" class="btn-close btn-close-white" data-mdb-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4" id="receiptContentToPrint">
                <div class="text-center mb-4">
                    <img src="/images/logo-placeholder.png" alt="Association Logo" style="max-height: 70px;" class="mb-2"/>
                    <h4 class="oswald-heading">Homeowners Association</h4>
                    <p class="lora-body small text-muted mb-0">123 Main Street, Community Ville, ST 12345</p>
                    <p class="lora-body small text-muted">contact@ourhoa.com | (555) 123-4567</p>
                    <hr/>
                    <h5 class="mt-4 mb-3 oswald-heading text-uppercase">Official Payment Receipt</h5>
                </div>
                <div class="row mb-2">
                    <div class="col-6"><strong>Receipt Number:</strong></div>
                    <div class="col-6 text-end" id="modalReceiptNumber"></div>
                </div>
                <div class="row mb-2">
                    <div class="col-6"><strong>Payment Date:</strong></div>
                    <div class="col-6 text-end" id="modalReceiptDate"></div>
                </div>
                 <div class="row mb-2">
                    <div class="col-6"><strong>Payment Method:</strong></div>
                    <div class="col-6 text-end" id="modalPaymentMethod"></div>
                </div>
                <div class="row mb-2" id="modalReferenceNumberRow" style="display: none;">
                    <div class="col-6"><strong>Reference #:</strong></div>
                    <div class="col-6 text-end" id="modalReferenceNumber"></div>
                </div>
                <hr/>
                <div class="row mb-2">
                    <div class="col-6"><strong>Bill Number:</strong></div>
                    <div class="col-6 text-end" id="modalReceiptBillNumber"></div>
                </div>
                <div class="row mb-3">
                    <div class="col-6 fs-5 fw-bold">Amount Paid:</div>
                    <div class="col-6 fs-5 fw-bold text-end text-success" id="modalReceiptAmount"></div>
                </div>
                <hr/>
                <div class="mt-4 text-center">
                    <p class="lora-body">Thank you for your prompt payment!</p>
                    <p class="text-muted small lora-body">This is an official receipt. Please keep it for your records.</p>
                </div>
            </div>
            <div class="modal-footer bg-light">
                <button type="button" class="btn btn-outline-secondary" data-mdb-dismiss="modal" data-mdb-ripple-init>Close</button>
                <button type="button" class="btn btn-primary" onclick="printReceiptContent()" data-mdb-ripple-init><i class="fas fa-print me-2"></i>Print</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Initialize MDB components that are not auto-initialized or need specific options
            const receiptModalElement = document.getElementById('receiptModal');
            const receiptModal = new mdb.Modal(receiptModalElement);

            // Ensure other MDB components like Select and Input are initialized if not using data-mdb-init
            // document.querySelectorAll('[data-mdb-select-init]').forEach((select) => { new mdb.Select(select); });
            // document.querySelectorAll('[data-mdb-input-init]').forEach((input) => { new mdb.Input(input).init(); });
            // Note: data-mdb-input-init and data-mdb-select-init should handle auto-initialization.
            // If issues persist, uncomment and ensure correct targeting.

            function applyFilters() {
                const yearFilter = document.getElementById("yearFilter").value;
                const methodFilter = document.getElementById("methodFilter").value.toLowerCase();
                const searchFilter = document.getElementById("searchFilter").value.toLowerCase();

                document.querySelectorAll(".payment-card").forEach(function (card) {
                    const year = card.dataset.year.toString();
                    const method = card.dataset.method.toLowerCase();
                    const searchText = card.dataset.search || '';

                    const yearMatch = yearFilter === "" || year === yearFilter;
                    const methodMatch = methodFilter === "" || method === methodFilter;
                    const searchMatch = searchFilter === "" || searchText.includes(searchFilter);

                    card.style.display = (yearMatch && methodMatch && searchMatch) ? "" : "none";
                });
            }

            window.showReceiptModal = function(paymentNumber, paymentDate, amountPaid, billNumber, paymentMethod, referenceNumber) {
                document.getElementById('modalReceiptNumber').textContent = paymentNumber;
                document.getElementById('modalReceiptDate').textContent = paymentDate;
                document.getElementById('modalReceiptAmount').textContent = amountPaid;
                document.getElementById('modalReceiptBillNumber').textContent = billNumber;
                document.getElementById('modalPaymentMethod').textContent = paymentMethod;

                const referenceNumberRow = document.getElementById('modalReferenceNumberRow');
                const modalReferenceNumberElement = document.getElementById('modalReferenceNumber');
                if (referenceNumber && referenceNumber !== 'N/A' && referenceNumber.trim() !== '') {
                    modalReferenceNumberElement.textContent = referenceNumber;
                    referenceNumberRow.style.display = 'flex'; // Or 'block' depending on layout needs
                } else {
                    modalReferenceNumberElement.textContent = '';
                    referenceNumberRow.style.display = 'none';
                }
                
                receiptModal.show();
            };

            window.printReceiptContent = function() {
                const printContent = document.getElementById("receiptContentToPrint").innerHTML;
                const originalContent = document.body.innerHTML;
                document.body.innerHTML = printContent;
                window.print();
                document.body.innerHTML = originalContent;
                window.location.reload(); // Reload to restore event listeners and MDB components
            };

            // Attach event listeners for filters
            const yearFilter = document.getElementById('yearFilter');
            const methodFilter = document.getElementById('methodFilter');
            const searchFilter = document.getElementById('searchFilter');

            if(yearFilter) yearFilter.addEventListener('valueChange.mdb.select', applyFilters);
            if(methodFilter) methodFilter.addEventListener('valueChange.mdb.select', applyFilters);
            if(searchFilter) searchFilter.addEventListener('input', applyFilters);

            // Initial application of filters if needed (e.g., if filters can be pre-selected)
            // applyFilters(); 
        });
    </script>
}