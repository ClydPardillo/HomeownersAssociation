@model HomeownersAssociation.Models.ViewModels.ServiceRequestsReportViewModel

@{
    ViewData["Title"] = "Service Requests Report";
}

<div class="container-fluid pt-4 px-4">
    <div class="bg-light rounded p-4">
        <div class="d-flex align-items-center justify-content-between mb-3">
            <h5 class="mb-0">@ViewData["Title"]</h5>
            <a asp-action="Index" class="btn btn-sm btn-secondary"><i class="fas fa-arrow-left me-2"></i>Back to Reports Dashboard</a>
        </div>
        <hr />

        <div class="row mt-4 g-4">
            <!-- Total Requests -->
            <div class="col-sm-6 col-xl-3">
                <div class="bg-white rounded d-flex align-items-center justify-content-between p-4 shadow-sm">
                    <i class="fas fa-concierge-bell fa-3x text-primary"></i>
                    <div class="ms-3 text-end">
                        <p class="mb-2">Total Requests</p>
                        <h6 class="mb-0">@Model.TotalRequests</h6>
                    </div>
                </div>
            </div>
        </div>

        <div class="row mt-4 g-4">
            <!-- Requests by Status -->
            <div class="col-md-6 col-lg-4">
                <div class="card shadow-sm h-100">
                    <div class="card-header">
                        <h6 class="mb-0"><i class="fas fa-tasks me-2"></i>Requests by Status</h6>
                    </div>
                    <div class="card-body">
                        @if (Model.RequestsByStatus.Any()){
                            <ul class="list-group list-group-flush">
                                @foreach (var status in Model.RequestsByStatus.OrderBy(s => s.Key))
                                {
                                    <li class="list-group-item d-flex justify-content-between align-items-center">
                                        @status.Key
                                        <span class="badge bg-primary rounded-pill">@status.Value</span>
                                    </li>
                                }
                            </ul>
                        } else {
                            <p class="text-muted">No data available.</p>
                        }
                    </div>
                </div>
            </div>

            <!-- Requests by Category -->
            <div class="col-md-6 col-lg-4">
                <div class="card shadow-sm h-100">
                    <div class="card-header">
                        <h6 class="mb-0"><i class="fas fa-tags me-2"></i>Requests by Category</h6>
                    </div>
                    <div class="card-body">
                         @if (Model.RequestsByCategory.Any()){
                            <ul class="list-group list-group-flush">
                                @foreach (var category in Model.RequestsByCategory.OrderBy(c => c.Key))
                                {
                                    <li class="list-group-item d-flex justify-content-between align-items-center">
                                        @category.Key
                                        <span class="badge bg-info rounded-pill">@category.Value</span>
                                    </li>
                                }
                            </ul>
                        } else {
                            <p class="text-muted">No data available.</p>
                        }
                    </div>
                </div>
            </div>

            <!-- Requests by Priority -->
            <div class="col-md-6 col-lg-4">
                <div class="card shadow-sm h-100">
                    <div class="card-header">
                        <h6 class="mb-0"><i class="fas fa-exclamation-triangle me-2"></i>Requests by Priority</h6>
                    </div>
                    <div class="card-body">
                        @if (Model.RequestsByPriority.Any()){
                            <ul class="list-group list-group-flush">
                                @foreach (var priority in Model.RequestsByPriority.OrderBy(p => p.Key))
                                {
                                    <li class="list-group-item d-flex justify-content-between align-items-center">
                                        @priority.Key
                                        <span class="badge bg-warning text-dark rounded-pill">@priority.Value</span>
                                    </li>
                                }
                            </ul>
                        } else {
                            <p class="text-muted">No data available.</p>
                        }
                    </div>
                </div>
            </div>
        </div>

        @* Add more detailed tables or charts here if needed in the future *@

    </div>
</div>

@section Styles {
    <style>
        .card-header h6 {
            font-weight: 500;
        }
    </style>
} 